collection:
  resource:
    type: collection
    path: /businesses/:businessId/product-tags
    params:
      businessId: { type: id, eg: 1 }
  methods:
    get:
      desc: List Product Tags
      altpaths:
        - /product-tags
      query:
        offset:     { type: int, eg: 5 }
        limit:      { type: int, eg: 5 }
        businessId: { type: id,  eg: 1 }
    post:
      desc: Add Product Tag
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        businessId: { type: int,    eg: 1 }
        tag:        { type: string, eg: toys, required: true }
  children:
    - /product-tags/:id

item:
  resource:
    type: item
    path: /businesses/:businessId/product-tags/:tagId
    params:
      businessId: { type: id, eg: 1 }
      tagId:      { type: id, eg: 1 }
  methods:
    get:
      desc: Get Product Tag
      altpaths:
        - /product-tags/:tagId
    put:
      desc: Update Product Tag
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        tag:        { type: string, eg: toys, required: true }
    delete:
      desc: Delete Product Tag
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }