collection:
  resource:
    type: collection
    path: /businesses
  methods:
    get:
      desc: List Businesses
      altpaths:
        - /businesses/food
        - /businesses/fashion
        - /businesses/other
      query:
        tag:        { type: string*, eg: [food,apparel] }
        sort:       { type: string,  eg: -name, choices:[name, -name] }
        include:    { type: string*, eg: [tags,locations], choices:[tags, locations] }
        offset:     { type: int,     eg: 5, default: 0 }
        limit:      { type: int,     eg: 5, default: 20 }
        filter:     { type: string,  eg: business }
        isVerified: { type: bool,    eg: true }
        isGB:       { type: bool,    eg: true }
    post:
      desc: Add Business
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        charityId:       { type: id,      eg: 1 }
        name:            { type: string,  eg: My Business, required: true }
        url:             { type: url,     eg: http://foo.com }
        logoUrl:         { type: url,     eg: http://foo.com/image.png }
        cardCode:        { type: string,  eg: 12345-ABC }
        menuDescription: { type: string,  eg: This is the description of the business menu }
        street1:         { type: string,  eg: 12345 FooBar Lane }
        street2:         { type: string,  eg: Suite 8986 }
        city:            { type: string,  eg: Austin }
        state:           { type: string,  eg: TX }
        zip:             { type: int,     eg: 78704 }
        tags:            { type: string*, eg: [food,apparel] }
        isGB:            { type: bool,    eg: true }
        isVerified:      { type: bool,    eg: true }
  children:
    - /businesses/:id
item:
  resource:
    type: item
    path: /businesses/:id
    params:
      id: { type: int, eg: 1 }
  methods:
    get:
      desc: Get Business
    put:
      desc: Update Business
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        charityId:       { type: id,      eg: 1 }
        name:            { type: string,  eg: My Business }
        url:             { type: url,     eg: http://foo.com }
        logoUrl:         { type: url,     eg: http://foo.com/image.png }
        cardCode:        { type: string,  eg: 12345-ABC }
        menuDescription: { type: string,  eg: This is the description of the business menu }
        street1:         { type: string,  eg: 12345 FooBar Lane }
        street2:         { type: string,  eg: Suite 8986 }
        city:            { type: string,  eg: Austin }
        state:           { type: string,  eg: TX }
        zip:             { type: int,     eg: 78704 }
        tags:            { type: string*, eg: [food,apparel] }
        isGB:            { type: bool,    eg: true }
        isVerified:      { type: bool,    eg: true }
    delete:
      desc: Delete Business
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
loyaltySettings:
  resource:
    type: item
    path: /businesses/:id/loyalty
    params:
      id: { type: int, eg: 1 }
  methods:
    get:
      desc: Get Business Loyalty Settings
    put:
      desc: Update Business Loyalty Settings
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        reward:                       { type: string, eg: A Burrito }
        requiredItem:                 { type: string, eg: A Taco }
        regularPunchesRequired:       { type: int,    eg: 10 }
        elitePunchesRequired:         { type: int,    eg: 5 }
        punchesRequiredToBecomeElite: { type: int,    eg: 20 }
        photoUrl:                     { type: url,    eg: http://foo.com/image.png }

requests:
  resource:
    type: item
    path: /businesses/requests
  methods:
    get:
      desc: Get business requests
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
    post:
      desc: Add business request
      body:
        name:                         { type: string, required: true, eg: Kirby Lane }