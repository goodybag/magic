collection:
  resource:
    type: collection
    path: /consumers
  methods:
    get:
      desc: List Consumers
      query:
        offset:  { type: int,     eg: 5 }
        limit:   { type: int,     eg: 5 }
        filter:  { type: string,  eg: business }
    post:
      desc: Add Consumer
      body:
        email:             { type: email,  eg: a_consumer_XXX@home.com, required: true }
        password:          { type: string, eg: password, required: true }
        firstName:         { type: string, eg: John }
        lastName:          { type: string, eg: Doe }
        cardId:            { type: cardid, eg: 610XXX-URV }
        screenName:        { type: string, eg: jdoe_XXX }
  children:
    - /consumers/:id

item:
  resource:
    type: item
    path: /consumers/:id
    params:
      id: { type: int, eg: 7 }
  methods:
    get:
      desc: Get Consumer
    put:
      desc: Update Consumer
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        email:           { type: email,  eg: a_consumer_XXX@home.com }
        firstName:       { type: string, eg: John }
        lastName:        { type: string, eg: Doe }
        cardId:          { type: cardid, eg: 610XXX-URV }
        screenName:      { type: string, eg: jdoe_XXX }
    delete:
      desc: Delete Consumer
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }

consumerPasswordItem:
  resource:
    type: item
    path: /consumers/:id/password
    params:
      id: { type: int, eg: 7 }
  methods:
    post:
      desc: Update Consumer Password
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        password: { type: string, eg: new_password }
    delete:
      desc: Delete Consumer
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }

cardUpdatesCollection:
  resource:
    type: collection
    path: /consumers/cardupdate
  methods:
    post:
      desc: Request Card Change
      body:
        email:  { type: email,  eg: a_consumer_XXX@home.com }
        cardId: { type: cardid, eg: 610XXX-URL }
  children:
    - /consumers/cardupdate/:token

cardUpdatesItem:
  resource:
    type: item
    path: /consumers/cardupdate/:token
    params:
      token: { type: string, eg: abcdefghijklmnopqrstuvwxyz }
  methods:
    post:
      desc: Finalize Card Change

collectionsCollection:
  resource:
    type: collection
    path: /consumers/:userId/collections
    params:
      userId:     { type: int, eg: 7 }
  methods:
    get:
      desc: List Consumer Collections
      query:
        offset:  { type: int, eg: 5 }
        limit:   { type: int, eg: 5 }
    post:
      desc: Create Consumer Collection
      auth:
        required: true
        eg: { email: consumer@goodybag.com, password: password }
      body:
        name:    { type: string, eg: My Collection, required: true }

collectionsItem:
  resource:
    type: item
    path: /consumers/:userId/collections/:collectionId
    params:
      userId:       { type: int, eg: 9 }
      collectionId: { type: int, eg: 3 }
  methods:
    get:
      desc: List Consumer Collection Products
      query:
        lat:        { type: float,   eg: 10.123 }
        lon:        { type: float,   eg: 10.123 }
        range:      { type: int,     eg: 500 }
        businessId: { type: id,      eg: 1 }
        locationId: { type: id,      eg: 1 }
        tag:        { type: string*, eg: [food, apparel] }
        sort:       { type: string,  eg: -name, choices: [-name, name, -distance, distance, -random, random, -popular, popular] }
        include:    { type: string*, eg: [tags, categories], choices: [tags, categories, inSpotlight, isSpotlight] }
        offset:     { type: int,     eg: 5, default: 0 }
        limit:      { type: int,     eg: 5, default: 20 }
        spotlight:  { type: bool,    eg: false }
        all:        { type: bool,    eg: false }
        userLikes:  { type: bool,    eg: false }
        userTried:  { type: bool,    eg: false }
        userWants: { type: bool,    eg: false }
    post:
      desc: Add Product to Consumer Collection
      auth:
        required: true
        eg: { email: consumer2@gmail.com, password: password }
      body:
        productId: { type: int, eg: 1, required: true }