collection:
  resource:
    type: collection
    path: /photos
  methods:
    get:
      desc: List Photos
      altpaths:
        - /businesses/:businessId/photos
        - /products/:productId/photos
      query:
        offset:     { type: int, eg: 5 }
        limit:      { type: int, eg: 5 }
        businessId: { type: id,  eg: 1 }
        productId:  { type: id,  eg: 1 }
        userId:     { type: id,  eg: 1 }
    post:
      desc: Add Photo
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        businessId: { type: id,     eg: 1 }
        productId:  { type: id,     eg: 1 }
        userId:     { type: id,     eg: 1 }
        url:        { type: url,    eg: http://foobar.com/pic.png }
        notes:      { type: string, eg: Notes about this picture }
        isEnabled:  { type: bool,   eg: true }
  children:
    - /photos/:id
item:
  resource:
    type: item
    path: /photos/:id
    params:
      id: { type: int, eg: 1 }
  methods:
    get:
      desc: Get Photo
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
    put:
      desc: Update Photo
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }
      body:
        businessId: { type: id,     eg: 1 }
        productId:  { type: id,     eg: 1 }
        userId:     { type: id,     eg: 1 }
        url:        { type: url,    eg: http://foobar.com/pic.png }
        notes:      { type: string, eg: Notes about this picture }
        isEnabled:  { type: bool,   eg: true }
    delete:
      desc: Delete Photo
      auth:
        required: true
        eg: { email: admin@goodybag.com, password: password }